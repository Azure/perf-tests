{{ if eq .NetworkPolicy_Type "cnp" }}
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: {{.Name}}
  namespace: {{.ClientNamespace}}
  labels:
    {{ (StructuralData .ClientLabelKey)}}: {{.ClientLabelValue}}
spec:
  endpointSelector:
    matchLabels:
      {{ (StructuralData .ClientLabelKey)}}: {{.ClientLabelValue}}
  egress:
  - toEndpoints:
    - matchLabels:
        {{ (StructuralData .TargetLabelKey)}}: {{.TargetLabelValue}}
        k8s:io.kubernetes.pod.namespace: {{.TargetNamespace}}  
    toPorts:
    - ports: 
      - port: "{{.TargetPort}}"
        protocol: TCP
      rules:
        http:
        - method: GET
          path: {{.TargetPath}}
{{else if .NetworkPolicy_Type "ccnp" }}
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: {{.Name}}
  labels:
    {{ (StructuralData .ClientLabelKey)}}: {{.ClientLabelValue}}
spec:
  endpointSelector:
    matchLabels:
      {{ (StructuralData .ClientLabelKey)}}: {{.ClientLabelValue}}
  egress:
  - toEndpoints:
    - matchLabels:
        {{ (StructuralData .TargetLabelKey)}}: {{.TargetLabelValue}}
        k8s:io.kubernetes.pod.namespace: {{.TargetNamespace}}  
    toPorts:
    - ports: 
      - port: "{{.TargetPort}}"
        protocol: TCP
      rules:
        http:
        - method: GET
          path: {{.TargetPath}}
{{else}}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{.Name}}
  namespace: {{.ClientNamespace}}
  labels:
    {{ (StructuralData .ClientLabelKey)}}: {{.ClientLabelValue}}
spec:
  podSelector:
    matchLabels:
      {{ (StructuralData .ClientLabelKey)}}: {{.ClientLabelValue}}
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          {{ (StructuralData .TargetLabelKey)}}: {{.TargetLabelValue}}
      namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: {{.TargetNamespace}}
    ports:
      port: "{{.TargetPort}}"
      protocol: TCP  
{{end}}
